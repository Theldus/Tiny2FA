.\" MIT License
.\"
.\" Copyright (c) 2018 Davidson Francis <davidsondfgl@gmail.com>
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining a copy
.\" of this software and associated documentation files (the "Software"), to deal
.\" in the Software without restriction, including without limitation the rights
.\" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
.\" copies of the Software, and to permit persons to whom the Software is
.\" furnished to do so, subject to the following conditions:
.\" 
.\" The above copyright notice and this permission notice shall be included in all
.\" copies or substantial portions of the Software.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
.\" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
.\" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.TH man 3 "31 Dec 2018" "1.0" "tiny2fa man page"
.SH NAME
t2_generate_secret_key \- Generates a secret key by a specified length.
.SH SYNOPSIS
.nf
.B #include <tiny2fa.h>
.sp
.BI "void t2_generate_secret_key(uint8_t " "*secret_key" );
.fi
.SH DESCRIPTION
.BR t2_generate_secret_key ()
generates a random secret-key in base32 and saves directly in the
.I secret_key.
Pay attention that the buffer should have at least 33 bytes (32 + '\\0') of space
to fit in the generated key.

It's also important to note that the algorithm will try to generate the key
by reading the /dev/urandom file. If the file is not available, the algorithm
will create the key by using the
.BR rand ()
function with current time as seed. If you don't think that this is a good
approach, feel free to change this function and implement your own generator.
.SH RETURN VALUE
The function does not return any value.
.SH EXAMPLE
.nf
#include <stdio.h>
#include <tiny2fa.h>

int main(void)
{
	uint8_t sk[T2_KEY_ENCODED_LENGTH + 1];
	t2_generate_secret_key(sk);
	printf("Generated key: %s\\n", sk);

	return (0);
}
.SH SEE ALSO
.BR rand (3),
.BR srand (3),
.BR t2_get_key (3),
.BR t2_verify_key (3)
.SH AUTHOR
Davidson Francis (davidsondfgl@gmail.com)
